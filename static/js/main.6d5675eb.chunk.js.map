{"version":3,"sources":["components/assets/logo.png","components/assets/complete.png","components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["count","Todo","useState","input","setInput","list","localStorage","getItem","JSON","parse","getlocal","items","setitems","isEdited","setisEdited","toggle","settoggle","toggleimg","settoggleimg","point","useRef","additonlist","console","log","map","data","id","name","Itemobj","alert","current","focus","useEffect","setItem","stringify","className","src","img1","img","placeholder","ref","value","onChange","event","target","onClick","class","e","updateddata","filter","itemdata","deletion","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAAe,MAA0B,iCCA1B,MAA0B,qC,eCKrCA,EAAM,EA2GKC,MAnGf,WACI,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBATf,WACX,IAAMG,EAAKC,aAAaC,QAAQ,cAChC,OAAGF,EACIG,KAAKC,MAAMJ,GAEX,GAI4BK,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCV,mBAAS,IAAzC,mBAAOW,EAAP,KAAiBC,EAAjB,KACA,EAA0BZ,oBAAS,GAAnC,mBAAMa,EAAN,KAAaC,EAAb,KACA,EAAgCd,oBAAS,GAAzC,mBAAMe,EAAN,KAAgBC,EAAhB,KAEMC,EAAQC,mBACRC,EAAc,WAChB,GAAKlB,EAEA,GAAGA,IAAUY,EACdG,GAAa,GAEbI,QAAQC,IAAIpB,GACZS,EAASD,EAAMa,KAAI,SAACC,GAChB,OAAGA,EAAKC,KAAOb,EACJ,2BAAIY,GAAX,IAAiBE,KAAKxB,IAEfsB,MAEfT,GAAU,GACVZ,EAAS,QAER,CACDc,GAAa,GACb,IAAMU,EAAQ,CACVF,GAAG1B,EACH2B,KAAKxB,GAETS,EAAS,GAAD,mBAAKD,GAAL,CAAWiB,KACnBxB,EAAS,IACTJ,IACAsB,QAAQC,IAAIZ,QAvBZkB,MAAM,WAyBVV,EAAMW,QAAQC,SAkClB,OAJAC,qBAAU,WACN1B,aAAa2B,QAAQ,aAAazB,KAAK0B,UAAUvB,MAClD,CAACA,IAGA,qCACI,sBAAKwB,UAAU,WAAf,UACKlB,EAAU,qBAAKmB,IAAKC,IAAS,qBAAKD,IAAKE,IACxC,uBACA,uBAAOC,YAAY,iBACfC,IAAKrB,EACLsB,MAAOtC,EACPuC,SAAU,SAACC,GAAD,OAAWvC,EAASuC,EAAMC,OAAOH,UAE9C1B,EAAO,wBAAQ8B,QAASxB,EAAjB,SAA8B,mBAAGyB,MAAM,yBAAmC,wBAAQD,QAASxB,EAAjB,SAA8B,mBAAGyB,MAAM,0BAE7H,sBAAKX,UAAU,YAAf,UACKxB,EAAMa,KAAI,SAACuB,GACR,OACA,sBAAKZ,UAAU,WAAf,UACI,qBAAKA,UAAU,OAAf,SAAuBY,EAAEpB,OACzB,wBAAQQ,UAAU,OAAOU,QAAS,kBAxClD/B,GADaW,EAyCmDsB,GAxC/CrB,IACjBtB,EAASqB,EAAKE,WACdX,GAAU,GAHE,IAACS,GAyCG,SAAoD,mBAAGqB,MAAM,uBAC7D,wBAAQX,UAAU,SAASU,QAAS,kBAlDzC,SAACpB,GACZ,IAAMuB,EAAYrC,EAAMsC,QACpB,SAACC,GACG,OAAOA,EAASxB,KAAOD,KAG/Bb,EAASoC,GA4CiDG,CAASJ,EAAErB,KAArD,SAA0D,mBAAGoB,MAAM,yBAHxCC,EAAErB,OAHzC,IAYI,wBAAQS,UAAU,eAAeU,QAjC7B,WACZjC,EAAS,IACTM,GAAa,IA+BL,+BChGDkC,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCOSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6d5675eb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.0af5b062.png\";","export default __webpack_public_path__ + \"static/media/complete.51af1e57.png\";","import React, { useRef,useState,useEffect } from 'react'\r\nimport img from './assets/logo.png';\r\nimport img1 from './assets/complete.png';\r\n\r\nimport './Todo.css';\r\nlet count=1;\r\nconst getlocal=()=>{\r\n    const list=localStorage.getItem(\"mytodolist\");\r\n    if(list)\r\n    return JSON.parse(list);\r\n    else\r\n    return [];\r\n}\r\nfunction Todo() {\r\n    const [input, setInput] = useState(\"\");\r\n    const [items, setitems] = useState(getlocal());\r\n    const [isEdited, setisEdited] = useState(\"\");\r\n    const[toggle,settoggle] = useState(true);\r\n    const[toggleimg,settoggleimg] = useState(false);\r\n\r\n    const point = useRef();\r\n    const additonlist = () => {\r\n        if (!input)\r\n            alert(\"Itemnot\");\r\n        else if(input && !toggle){\r\n            settoggleimg(false);\r\n\r\n            console.log(input);\r\n            setitems(items.map((data)=>{\r\n                if(data.id === isEdited)\r\n                    return {...data, name:input};\r\n                else\r\n                    return data;\r\n            }));\r\n            settoggle(true);\r\n            setInput(\"\");\r\n        }\r\n        else {\r\n            settoggleimg(false);\r\n            const Itemobj={\r\n                id:count,\r\n                name:input\r\n            };\r\n            setitems([...items,Itemobj]);\r\n            setInput(\"\")\r\n            count++;\r\n            console.log(items);\r\n        }\r\n        point.current.focus();\r\n    }\r\n    const deletion=(data)=>{\r\n        const updateddata=items.filter(\r\n            (itemdata)=>{\r\n                return itemdata.id !== data;\r\n            }\r\n        )\r\n        setitems(updateddata);\r\n    }\r\n    const Changment=(data)=>{\r\n        setisEdited(data.id);\r\n        setInput(data.name);\r\n        settoggle(false);\r\n        \r\n        // const updateddata=items.map(\r\n        //     (dataItem)=>{\r\n        //         // if(dataItem.id)\r\n        //     }\r\n        // )\r\n    }\r\n\r\n    const clicked=()=>{\r\n        point.current.focus();\r\n    }\r\n    const Deleteall=()=>{\r\n        setitems([]);\r\n        settoggleimg(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"mytodolist\",JSON.stringify(items));\r\n    }, [items])\r\n    \r\n    return (\r\n        <>\r\n            <div className='main-div'>\r\n                {toggleimg?<img src={img1} />:<img src={img} />}\r\n                <br></br>\r\n                <input placeholder='Enter yourTask'\r\n                    ref={point}\r\n                    value={input}\r\n                    onChange={(event) => setInput(event.target.value)}\r\n                />\r\n                {toggle?<button onClick={additonlist}><i class=\"fas fa-plus-circle\"></i></button>:<button onClick={additonlist}><i class=\"fas fa-user-edit\"></i></button>}\r\n            </div>\r\n            <div className='ItemAdded'>\r\n                {items.map((e) => {\r\n                    return(\r\n                    <div className='EachItem' key={e.id}>\r\n                        <div className=\"span\">{e.name}</div>\r\n                        <button className='edit' onClick={()=>Changment(e)}><i class=\"fas fa-user-edit\"></i></button>\r\n                        <button className='delete' onClick={() => deletion(e.id)}><i class=\"fas fa-trash-alt\"></i></button>\r\n                        {/* <i className=\"fas fa-plus\" /> */}\r\n                        {/* <FontAwesomeIcon icon=\"fa-solid fa-file-pen\" /> */}\r\n                        \r\n                    </div>);\r\n                })};\r\n                <button className='Removeallbtn' onClick={Deleteall}>Remove all</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo","import './App.css';\nimport Todo from './components/Todo';\nfunction App() {\n  return (\n    <>\n      <Todo/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}